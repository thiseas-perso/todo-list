(() => { "use strict"; var n = { 24: (n, e, t) => { t.d(e, { Z: () => A }); var o = t(537), r = t.n(o), i = t(645), a = t.n(i)()(r()); a.push([n.id, '/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\n html {\n   line-height: 1.15; /* 1 */\n   -webkit-text-size-adjust: 100%; /* 2 */\n }\n \n /* Sections\n    ========================================================================== */\n \n /**\n  * Remove the margin in all browsers.\n  */\n \n body {\n   margin: 0;\n }\n \n /**\n  * Render the `main` element consistently in IE.\n  */\n \n main {\n   display: block;\n }\n \n /**\n  * Correct the font size and margin on `h1` elements within `section` and\n  * `article` contexts in Chrome, Firefox, and Safari.\n  */\n \n h1 {\n   font-size: 2em;\n   margin: 0.67em 0;\n }\n \n /* Grouping content\n    ========================================================================== */\n \n /**\n  * 1. Add the correct box sizing in Firefox.\n  * 2. Show the overflow in Edge and IE.\n  */\n \n hr {\n   box-sizing: content-box; /* 1 */\n   height: 0; /* 1 */\n   overflow: visible; /* 2 */\n }\n \n /**\n  * 1. Correct the inheritance and scaling of font size in all browsers.\n  * 2. Correct the odd `em` font sizing in all browsers.\n  */\n \n pre {\n   font-family: monospace, monospace; /* 1 */\n   font-size: 1em; /* 2 */\n }\n \n /* Text-level semantics\n    ========================================================================== */\n \n /**\n  * Remove the gray background on active links in IE 10.\n  */\n \n a {\n   background-color: transparent;\n }\n \n /**\n  * 1. Remove the bottom border in Chrome 57-\n  * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n  */\n \n abbr[title] {\n   border-bottom: none; /* 1 */\n   text-decoration: underline; /* 2 */\n   text-decoration: underline dotted; /* 2 */\n }\n \n /**\n  * Add the correct font weight in Chrome, Edge, and Safari.\n  */\n \n b,\n strong {\n   font-weight: bolder;\n }\n \n /**\n  * 1. Correct the inheritance and scaling of font size in all browsers.\n  * 2. Correct the odd `em` font sizing in all browsers.\n  */\n \n code,\n kbd,\n samp {\n   font-family: monospace, monospace; /* 1 */\n   font-size: 1em; /* 2 */\n }\n \n /**\n  * Add the correct font size in all browsers.\n  */\n \n small {\n   font-size: 80%;\n }\n \n /**\n  * Prevent `sub` and `sup` elements from affecting the line height in\n  * all browsers.\n  */\n \n sub,\n sup {\n   font-size: 75%;\n   line-height: 0;\n   position: relative;\n   vertical-align: baseline;\n }\n \n sub {\n   bottom: -0.25em;\n }\n \n sup {\n   top: -0.5em;\n }\n \n /* Embedded content\n    ========================================================================== */\n \n /**\n  * Remove the border on images inside links in IE 10.\n  */\n \n img {\n   border-style: none;\n }\n \n /* Forms\n    ========================================================================== */\n \n /**\n  * 1. Change the font styles in all browsers.\n  * 2. Remove the margin in Firefox and Safari.\n  */\n \n button,\n input,\n optgroup,\n select,\n textarea {\n   font-family: inherit; /* 1 */\n   font-size: 100%; /* 1 */\n   line-height: 1.15; /* 1 */\n   margin: 0; /* 2 */\n }\n \n /**\n  * Show the overflow in IE.\n  * 1. Show the overflow in Edge.\n  */\n \n button,\n input { /* 1 */\n   overflow: visible;\n }\n \n /**\n  * Remove the inheritance of text transform in Edge, Firefox, and IE.\n  * 1. Remove the inheritance of text transform in Firefox.\n  */\n \n button,\n select { /* 1 */\n   text-transform: none;\n }\n \n /**\n  * Correct the inability to style clickable types in iOS and Safari.\n  */\n \n button,\n [type="button"],\n [type="reset"],\n [type="submit"] {\n   -webkit-appearance: button;\n }\n \n /**\n  * Remove the inner border and padding in Firefox.\n  */\n \n button::-moz-focus-inner,\n [type="button"]::-moz-focus-inner,\n [type="reset"]::-moz-focus-inner,\n [type="submit"]::-moz-focus-inner {\n   border-style: none;\n   padding: 0;\n }\n \n /**\n  * Restore the focus styles unset by the previous rule.\n  */\n \n button:-moz-focusring,\n [type="button"]:-moz-focusring,\n [type="reset"]:-moz-focusring,\n [type="submit"]:-moz-focusring {\n   outline: 1px dotted ButtonText;\n }\n \n /**\n  * Correct the padding in Firefox.\n  */\n \n fieldset {\n   padding: 0.35em 0.75em 0.625em;\n }\n \n /**\n  * 1. Correct the text wrapping in Edge and IE.\n  * 2. Correct the color inheritance from `fieldset` elements in IE.\n  * 3. Remove the padding so developers are not caught out when they zero out\n  *    `fieldset` elements in all browsers.\n  */\n \n legend {\n   box-sizing: border-box; /* 1 */\n   color: inherit; /* 2 */\n   display: table; /* 1 */\n   max-width: 100%; /* 1 */\n   padding: 0; /* 3 */\n   white-space: normal; /* 1 */\n }\n \n /**\n  * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n  */\n \n progress {\n   vertical-align: baseline;\n }\n \n /**\n  * Remove the default vertical scrollbar in IE 10+.\n  */\n \n textarea {\n   overflow: auto;\n }\n \n /**\n  * 1. Add the correct box sizing in IE 10.\n  * 2. Remove the padding in IE 10.\n  */\n \n [type="checkbox"],\n [type="radio"] {\n   box-sizing: border-box; /* 1 */\n   padding: 0; /* 2 */\n }\n \n /**\n  * Correct the cursor style of increment and decrement buttons in Chrome.\n  */\n \n [type="number"]::-webkit-inner-spin-button,\n [type="number"]::-webkit-outer-spin-button {\n   height: auto;\n }\n \n /**\n  * 1. Correct the odd appearance in Chrome and Safari.\n  * 2. Correct the outline style in Safari.\n  */\n \n [type="search"] {\n   -webkit-appearance: textfield; /* 1 */\n   outline-offset: -2px; /* 2 */\n }\n \n /**\n  * Remove the inner padding in Chrome and Safari on macOS.\n  */\n \n [type="search"]::-webkit-search-decoration {\n   -webkit-appearance: none;\n }\n \n /**\n  * 1. Correct the inability to style clickable types in iOS and Safari.\n  * 2. Change font properties to `inherit` in Safari.\n  */\n \n ::-webkit-file-upload-button {\n   -webkit-appearance: button; /* 1 */\n   font: inherit; /* 2 */\n }\n \n /* Interactive\n    ========================================================================== */\n \n /*\n  * Add the correct display in Edge, IE 10+, and Firefox.\n  */\n \n details {\n   display: block;\n }\n \n /*\n  * Add the correct display in all browsers.\n  */\n \n summary {\n   display: list-item;\n }\n \n /* Misc\n    ========================================================================== */\n \n /**\n  * Add the correct display in IE 10+.\n  */\n \n template {\n   display: none;\n }\n \n /**\n  * Add the correct display in IE 10.\n  */\n \n [hidden] {\n   display: none;\n }\n ', "", { version: 3, sources: ["webpack://./src/normalize.css"], names: [], mappings: "AAAA,2EAA2E;;AAE3E;+EAC+E;;AAE/E;;;EAGE;;CAED;GACE,iBAAiB,EAAE,MAAM;GACzB,8BAA8B,EAAE,MAAM;CACxC;;CAEA;gFAC+E;;CAE/E;;GAEE;;CAEF;GACE,SAAS;CACX;;CAEA;;GAEE;;CAEF;GACE,cAAc;CAChB;;CAEA;;;GAGE;;CAEF;GACE,cAAc;GACd,gBAAgB;CAClB;;CAEA;gFAC+E;;CAE/E;;;GAGE;;CAEF;GACE,uBAAuB,EAAE,MAAM;GAC/B,SAAS,EAAE,MAAM;GACjB,iBAAiB,EAAE,MAAM;CAC3B;;CAEA;;;GAGE;;CAEF;GACE,iCAAiC,EAAE,MAAM;GACzC,cAAc,EAAE,MAAM;CACxB;;CAEA;gFAC+E;;CAE/E;;GAEE;;CAEF;GACE,6BAA6B;CAC/B;;CAEA;;;GAGE;;CAEF;GACE,mBAAmB,EAAE,MAAM;GAC3B,0BAA0B,EAAE,MAAM;GAClC,iCAAiC,EAAE,MAAM;CAC3C;;CAEA;;GAEE;;CAEF;;GAEE,mBAAmB;CACrB;;CAEA;;;GAGE;;CAEF;;;GAGE,iCAAiC,EAAE,MAAM;GACzC,cAAc,EAAE,MAAM;CACxB;;CAEA;;GAEE;;CAEF;GACE,cAAc;CAChB;;CAEA;;;GAGE;;CAEF;;GAEE,cAAc;GACd,cAAc;GACd,kBAAkB;GAClB,wBAAwB;CAC1B;;CAEA;GACE,eAAe;CACjB;;CAEA;GACE,WAAW;CACb;;CAEA;gFAC+E;;CAE/E;;GAEE;;CAEF;GACE,kBAAkB;CACpB;;CAEA;gFAC+E;;CAE/E;;;GAGE;;CAEF;;;;;GAKE,oBAAoB,EAAE,MAAM;GAC5B,eAAe,EAAE,MAAM;GACvB,iBAAiB,EAAE,MAAM;GACzB,SAAS,EAAE,MAAM;CACnB;;CAEA;;;GAGE;;CAEF;SACQ,MAAM;GACZ,iBAAiB;CACnB;;CAEA;;;GAGE;;CAEF;UACS,MAAM;GACb,oBAAoB;CACtB;;CAEA;;GAEE;;CAEF;;;;GAIE,0BAA0B;CAC5B;;CAEA;;GAEE;;CAEF;;;;GAIE,kBAAkB;GAClB,UAAU;CACZ;;CAEA;;GAEE;;CAEF;;;;GAIE,8BAA8B;CAChC;;CAEA;;GAEE;;CAEF;GACE,8BAA8B;CAChC;;CAEA;;;;;GAKE;;CAEF;GACE,sBAAsB,EAAE,MAAM;GAC9B,cAAc,EAAE,MAAM;GACtB,cAAc,EAAE,MAAM;GACtB,eAAe,EAAE,MAAM;GACvB,UAAU,EAAE,MAAM;GAClB,mBAAmB,EAAE,MAAM;CAC7B;;CAEA;;GAEE;;CAEF;GACE,wBAAwB;CAC1B;;CAEA;;GAEE;;CAEF;GACE,cAAc;CAChB;;CAEA;;;GAGE;;CAEF;;GAEE,sBAAsB,EAAE,MAAM;GAC9B,UAAU,EAAE,MAAM;CACpB;;CAEA;;GAEE;;CAEF;;GAEE,YAAY;CACd;;CAEA;;;GAGE;;CAEF;GACE,6BAA6B,EAAE,MAAM;GACrC,oBAAoB,EAAE,MAAM;CAC9B;;CAEA;;GAEE;;CAEF;GACE,wBAAwB;CAC1B;;CAEA;;;GAGE;;CAEF;GACE,0BAA0B,EAAE,MAAM;GAClC,aAAa,EAAE,MAAM;CACvB;;CAEA;gFAC+E;;CAE/E;;GAEE;;CAEF;GACE,cAAc;CAChB;;CAEA;;GAEE;;CAEF;GACE,kBAAkB;CACpB;;CAEA;gFAC+E;;CAE/E;;GAEE;;CAEF;GACE,aAAa;CACf;;CAEA;;GAEE;;CAEF;GACE,aAAa;CACf", sourcesContent: ['/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\n html {\n   line-height: 1.15; /* 1 */\n   -webkit-text-size-adjust: 100%; /* 2 */\n }\n \n /* Sections\n    ========================================================================== */\n \n /**\n  * Remove the margin in all browsers.\n  */\n \n body {\n   margin: 0;\n }\n \n /**\n  * Render the `main` element consistently in IE.\n  */\n \n main {\n   display: block;\n }\n \n /**\n  * Correct the font size and margin on `h1` elements within `section` and\n  * `article` contexts in Chrome, Firefox, and Safari.\n  */\n \n h1 {\n   font-size: 2em;\n   margin: 0.67em 0;\n }\n \n /* Grouping content\n    ========================================================================== */\n \n /**\n  * 1. Add the correct box sizing in Firefox.\n  * 2. Show the overflow in Edge and IE.\n  */\n \n hr {\n   box-sizing: content-box; /* 1 */\n   height: 0; /* 1 */\n   overflow: visible; /* 2 */\n }\n \n /**\n  * 1. Correct the inheritance and scaling of font size in all browsers.\n  * 2. Correct the odd `em` font sizing in all browsers.\n  */\n \n pre {\n   font-family: monospace, monospace; /* 1 */\n   font-size: 1em; /* 2 */\n }\n \n /* Text-level semantics\n    ========================================================================== */\n \n /**\n  * Remove the gray background on active links in IE 10.\n  */\n \n a {\n   background-color: transparent;\n }\n \n /**\n  * 1. Remove the bottom border in Chrome 57-\n  * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n  */\n \n abbr[title] {\n   border-bottom: none; /* 1 */\n   text-decoration: underline; /* 2 */\n   text-decoration: underline dotted; /* 2 */\n }\n \n /**\n  * Add the correct font weight in Chrome, Edge, and Safari.\n  */\n \n b,\n strong {\n   font-weight: bolder;\n }\n \n /**\n  * 1. Correct the inheritance and scaling of font size in all browsers.\n  * 2. Correct the odd `em` font sizing in all browsers.\n  */\n \n code,\n kbd,\n samp {\n   font-family: monospace, monospace; /* 1 */\n   font-size: 1em; /* 2 */\n }\n \n /**\n  * Add the correct font size in all browsers.\n  */\n \n small {\n   font-size: 80%;\n }\n \n /**\n  * Prevent `sub` and `sup` elements from affecting the line height in\n  * all browsers.\n  */\n \n sub,\n sup {\n   font-size: 75%;\n   line-height: 0;\n   position: relative;\n   vertical-align: baseline;\n }\n \n sub {\n   bottom: -0.25em;\n }\n \n sup {\n   top: -0.5em;\n }\n \n /* Embedded content\n    ========================================================================== */\n \n /**\n  * Remove the border on images inside links in IE 10.\n  */\n \n img {\n   border-style: none;\n }\n \n /* Forms\n    ========================================================================== */\n \n /**\n  * 1. Change the font styles in all browsers.\n  * 2. Remove the margin in Firefox and Safari.\n  */\n \n button,\n input,\n optgroup,\n select,\n textarea {\n   font-family: inherit; /* 1 */\n   font-size: 100%; /* 1 */\n   line-height: 1.15; /* 1 */\n   margin: 0; /* 2 */\n }\n \n /**\n  * Show the overflow in IE.\n  * 1. Show the overflow in Edge.\n  */\n \n button,\n input { /* 1 */\n   overflow: visible;\n }\n \n /**\n  * Remove the inheritance of text transform in Edge, Firefox, and IE.\n  * 1. Remove the inheritance of text transform in Firefox.\n  */\n \n button,\n select { /* 1 */\n   text-transform: none;\n }\n \n /**\n  * Correct the inability to style clickable types in iOS and Safari.\n  */\n \n button,\n [type="button"],\n [type="reset"],\n [type="submit"] {\n   -webkit-appearance: button;\n }\n \n /**\n  * Remove the inner border and padding in Firefox.\n  */\n \n button::-moz-focus-inner,\n [type="button"]::-moz-focus-inner,\n [type="reset"]::-moz-focus-inner,\n [type="submit"]::-moz-focus-inner {\n   border-style: none;\n   padding: 0;\n }\n \n /**\n  * Restore the focus styles unset by the previous rule.\n  */\n \n button:-moz-focusring,\n [type="button"]:-moz-focusring,\n [type="reset"]:-moz-focusring,\n [type="submit"]:-moz-focusring {\n   outline: 1px dotted ButtonText;\n }\n \n /**\n  * Correct the padding in Firefox.\n  */\n \n fieldset {\n   padding: 0.35em 0.75em 0.625em;\n }\n \n /**\n  * 1. Correct the text wrapping in Edge and IE.\n  * 2. Correct the color inheritance from `fieldset` elements in IE.\n  * 3. Remove the padding so developers are not caught out when they zero out\n  *    `fieldset` elements in all browsers.\n  */\n \n legend {\n   box-sizing: border-box; /* 1 */\n   color: inherit; /* 2 */\n   display: table; /* 1 */\n   max-width: 100%; /* 1 */\n   padding: 0; /* 3 */\n   white-space: normal; /* 1 */\n }\n \n /**\n  * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n  */\n \n progress {\n   vertical-align: baseline;\n }\n \n /**\n  * Remove the default vertical scrollbar in IE 10+.\n  */\n \n textarea {\n   overflow: auto;\n }\n \n /**\n  * 1. Add the correct box sizing in IE 10.\n  * 2. Remove the padding in IE 10.\n  */\n \n [type="checkbox"],\n [type="radio"] {\n   box-sizing: border-box; /* 1 */\n   padding: 0; /* 2 */\n }\n \n /**\n  * Correct the cursor style of increment and decrement buttons in Chrome.\n  */\n \n [type="number"]::-webkit-inner-spin-button,\n [type="number"]::-webkit-outer-spin-button {\n   height: auto;\n }\n \n /**\n  * 1. Correct the odd appearance in Chrome and Safari.\n  * 2. Correct the outline style in Safari.\n  */\n \n [type="search"] {\n   -webkit-appearance: textfield; /* 1 */\n   outline-offset: -2px; /* 2 */\n }\n \n /**\n  * Remove the inner padding in Chrome and Safari on macOS.\n  */\n \n [type="search"]::-webkit-search-decoration {\n   -webkit-appearance: none;\n }\n \n /**\n  * 1. Correct the inability to style clickable types in iOS and Safari.\n  * 2. Change font properties to `inherit` in Safari.\n  */\n \n ::-webkit-file-upload-button {\n   -webkit-appearance: button; /* 1 */\n   font: inherit; /* 2 */\n }\n \n /* Interactive\n    ========================================================================== */\n \n /*\n  * Add the correct display in Edge, IE 10+, and Firefox.\n  */\n \n details {\n   display: block;\n }\n \n /*\n  * Add the correct display in all browsers.\n  */\n \n summary {\n   display: list-item;\n }\n \n /* Misc\n    ========================================================================== */\n \n /**\n  * Add the correct display in IE 10+.\n  */\n \n template {\n   display: none;\n }\n \n /**\n  * Add the correct display in IE 10.\n  */\n \n [hidden] {\n   display: none;\n }\n '], sourceRoot: "" }]); const A = a }, 426: (n, e, t) => { t.d(e, { Z: () => u }); var o = t(537), r = t.n(o), i = t(645), a = t.n(i), A = t(667), c = t.n(A), s = new URL(t(253), t.b), d = new URL(t(818), t.b), l = a()(r()); l.push([n.id, "@import url(https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap);"]); var p = c()(s), m = c()(d); l.push([n.id, "@font-face {\n   font-family: 'Material Icons';\n   font-style: normal;\n   font-weight: 400;\n   src: url(" + p + "); \n   src: local('Material Icons'),\n        local('MaterialIcons-Regular'),\n        url(" + m + ") format('truetype');\n}\n\nbody{\n   background-color: #98c1d9;\n   color: whitesmoke;\n   display: grid;\n   grid-template-columns: max-content 1fr;\n   grid-template-rows: min-content 1fr;\n   height: 100vh;\n   column-gap: 16px;\n   margin: 0;\n   font-family: 'Roboto', sans-serif;\n   \n}\n\n\n\n.overlay-div{\n   background-color: hsla(218, 23%, 21%, 70%);\n   position: fixed;\n   top: 0;\n   left: 0;\n   width: 100%;\n   height: 100%;\n   z-index: 10;\n   display: flex;\n   justify-content: center;\n   align-items: center;\n}\n\n\n.details-container,\n.newtodo-container,\n.newitem-container{\n   z-index: 90;\n   background-color: #98c1d9;\n   border: 1px solid #293241;\n   padding: 16px 32px;\n   color: black;\n}\n\n.newitem-container form{\ndisplay: grid;\ngap: 8px;\ngrid-template-columns: 1fr 1fr;\ngrid-template-rows: 1fr 1fr;\n}\n\n.newitem-container form input{\ngrid-column: 1/3;\n}\n\n.newtodo-container form{\n   display: grid;\n   gap: 8px;\n   grid-template-columns: 1fr 1fr;\n   grid-template-rows: repeat(4, max-content);\n   align-items: center;\n}\n\n.newtodo-container input,\n.newtodo-container textarea,\n.newtodo-container select {\n   grid-column: 1/3;\n}\n\n.newtodo-container h4{\n   margin: 8px 0px;\n}\n\n.close-btn:hover{\n   background-color: #ee6c4d;\n}\n\n\naside{\n   display: flex;\n   flex-direction: column;\n   justify-content: space-between;\n   padding: 16px;\n   padding-bottom:32px;\n   background-color: #3d5a80;\n}\n\nheader{\n   grid-column: 1/3;\n   max-height: max-content;\n   background-color: #293241;\n   padding: 16px;\n}\n\nmain{\n   padding-top: 72px;\n   display: flex;\n   flex-direction: column;\n   max-width: 800px;\n}\n\n.todo-container{\n   display: grid;\n   grid-template-columns: repeat(4, 1fr);   \n   align-items: center;\n   justify-items: center;\n   padding: 0 16px;\n   background-color: #3d5a80;\n   margin-bottom: 8px;\n   margin-right: 16px;\n}\n\n.btn-container{\n   display: flex;\n   gap: 8px\n}\n\n.todo-completed{\n   filter: brightness(50%);\n}\n\n.todo-completed > p{\n   text-decoration: line-through;\n}\n\n.sidebar-item{\n   transition: 50ms;\n   padding: 8px 16px;\n   margin-bottom: 8px;\n   display: flex;\n   align-items: center;\n   gap: 16px;\n}\n\n.sidebar-item:hover{\n   color: #e0fbfc;\n   cursor: pointer;\n   scale: 101%;\n}\n\n.sidebar-item:active{\n   color: #e0fbfc\n   \n}\n\n.activated{\n   background-color: #293241;\n   color: #98c1d9;\n}\n\n\nbutton{\n   border-radius: 0;\n   border: 1px solid #293241;\n   box-shadow: none;\n   background-color: #e0fbfc;\n   font-size: 0.8rem;\n   padding: 8px 16px;\n   transition: 50ms;\n}\n\nbutton:hover{\n   background-color: #98c1d9;\n   cursor: pointer;\n}\n\nbutton:active{\nbackground-color: #3d5a80;\n}\n\n.deleteBtn,\n.editBtn\n.toggleBtn{\n   transition: 50ms;\n}\n\n.deleteBtn:hover{\ncursor: pointer;\ncolor: #ee6c4d;\n}\n\n.deleteBtn:active{\n   color: #c1121f;\n}\n\n\n.editBtn:hover,\n.toggleBtn:hover{\n   cursor: pointer;\n   color: #e0fbfc;\n}\n\n\n.priodisplay:hover{\ncursor: default;\n}\n\n\n.noprio{\n   color: #98c1d9;\n}\n\n.lowprio{\n   color: #32db81;\n}\n.normalprio{\n   color: #db8a32;\n}\n.highprio{\n   color: #db324d;\n}\n\n\n\n#newTodoBtn{\n   background-color: #98c1d9;\n   color: #e0fbfc;\n   font-size: 1.2rem;\n   transition: 50ms;\n   border: 1px solid #e0fbfc;\n   border-radius: 0;\n   box-shadow: 5px 5px 20px rgba(224, 251, 252, 0.5); \n   padding: 8px 16px;\n   transition: 100ms;\n   margin-right: 16px;\n}\n\n#newTodoBtn:hover{\n   cursor: pointer;\n   background-color: #3d5a80;\n}\n\n#newTodoBtnContainer{\n   margin-top: 16px;\n   display: flex;\n   justify-content: right;\n}\n\n#newBtn{\n   color: #e0fbfc;\n   font-size: 4rem;\n   transition: 50ms;\n   border: 3px solid #e0fbfc;\n   border-radius: 50%;\n   box-shadow: 5px 5px 20px rgba(224, 251, 252, 0.5)  ; \n   transition: 100ms;\n}\n\n\n#newBtn:hover{\n   cursor: pointer;\n   background-color: #98c1d9;\n}\n\n\n\n#newBtn:active,\n#newTodoBtn:active{\n   transform: translateY(2px);\n}\n\n\ntextarea {\n   resize: none;\n }\n\n\n.material-icons-outlined {\n   font-family: 'Material Icons';\n   font-weight: normal;\n   font-style: normal;\n   font-size: 24px;  /* Preferred icon size */\n   display: inline-block;\n   line-height: 1;\n   text-transform: none;\n   letter-spacing: normal;\n   word-wrap: normal;\n   white-space: nowrap;\n   direction: ltr;\n \n   /* Support for all WebKit browsers. */\n   -webkit-font-smoothing: antialiased;\n   /* Support for Safari and Chrome. */\n   text-rendering: optimizeLegibility;\n \n   /* Support for Firefox. */\n   -moz-osx-font-smoothing: grayscale;\n \n   /* Support for IE. */\n   font-feature-settings: 'liga';\n }", "", { version: 3, sources: ["webpack://./src/style.css"], names: [], mappings: "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", sourcesContent: ["@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');\n\n\n@font-face {\n   font-family: 'Material Icons';\n   font-style: normal;\n   font-weight: 400;\n   src: url(./icons/MaterialIconsOutlined-Regular.otf); \n   src: local('Material Icons'),\n        local('MaterialIcons-Regular'),\n        url(./icons/MaterialIcons-Regular.ttf) format('truetype');\n}\n\nbody{\n   background-color: #98c1d9;\n   color: whitesmoke;\n   display: grid;\n   grid-template-columns: max-content 1fr;\n   grid-template-rows: min-content 1fr;\n   height: 100vh;\n   column-gap: 16px;\n   margin: 0;\n   font-family: 'Roboto', sans-serif;\n   \n}\n\n\n\n.overlay-div{\n   background-color: hsla(218, 23%, 21%, 70%);\n   position: fixed;\n   top: 0;\n   left: 0;\n   width: 100%;\n   height: 100%;\n   z-index: 10;\n   display: flex;\n   justify-content: center;\n   align-items: center;\n}\n\n\n.details-container,\n.newtodo-container,\n.newitem-container{\n   z-index: 90;\n   background-color: #98c1d9;\n   border: 1px solid #293241;\n   padding: 16px 32px;\n   color: black;\n}\n\n.newitem-container form{\ndisplay: grid;\ngap: 8px;\ngrid-template-columns: 1fr 1fr;\ngrid-template-rows: 1fr 1fr;\n}\n\n.newitem-container form input{\ngrid-column: 1/3;\n}\n\n.newtodo-container form{\n   display: grid;\n   gap: 8px;\n   grid-template-columns: 1fr 1fr;\n   grid-template-rows: repeat(4, max-content);\n   align-items: center;\n}\n\n.newtodo-container input,\n.newtodo-container textarea,\n.newtodo-container select {\n   grid-column: 1/3;\n}\n\n.newtodo-container h4{\n   margin: 8px 0px;\n}\n\n.close-btn:hover{\n   background-color: #ee6c4d;\n}\n\n\naside{\n   display: flex;\n   flex-direction: column;\n   justify-content: space-between;\n   padding: 16px;\n   padding-bottom:32px;\n   background-color: #3d5a80;\n}\n\nheader{\n   grid-column: 1/3;\n   max-height: max-content;\n   background-color: #293241;\n   padding: 16px;\n}\n\nmain{\n   padding-top: 72px;\n   display: flex;\n   flex-direction: column;\n   max-width: 800px;\n}\n\n.todo-container{\n   display: grid;\n   grid-template-columns: repeat(4, 1fr);   \n   align-items: center;\n   justify-items: center;\n   padding: 0 16px;\n   background-color: #3d5a80;\n   margin-bottom: 8px;\n   margin-right: 16px;\n}\n\n.btn-container{\n   display: flex;\n   gap: 8px\n}\n\n.todo-completed{\n   filter: brightness(50%);\n}\n\n.todo-completed > p{\n   text-decoration: line-through;\n}\n\n.sidebar-item{\n   transition: 50ms;\n   padding: 8px 16px;\n   margin-bottom: 8px;\n   display: flex;\n   align-items: center;\n   gap: 16px;\n}\n\n.sidebar-item:hover{\n   color: #e0fbfc;\n   cursor: pointer;\n   scale: 101%;\n}\n\n.sidebar-item:active{\n   color: #e0fbfc\n   \n}\n\n.activated{\n   background-color: #293241;\n   color: #98c1d9;\n}\n\n\nbutton{\n   border-radius: 0;\n   border: 1px solid #293241;\n   box-shadow: none;\n   background-color: #e0fbfc;\n   font-size: 0.8rem;\n   padding: 8px 16px;\n   transition: 50ms;\n}\n\nbutton:hover{\n   background-color: #98c1d9;\n   cursor: pointer;\n}\n\nbutton:active{\nbackground-color: #3d5a80;\n}\n\n.deleteBtn,\n.editBtn\n.toggleBtn{\n   transition: 50ms;\n}\n\n.deleteBtn:hover{\ncursor: pointer;\ncolor: #ee6c4d;\n}\n\n.deleteBtn:active{\n   color: #c1121f;\n}\n\n\n.editBtn:hover,\n.toggleBtn:hover{\n   cursor: pointer;\n   color: #e0fbfc;\n}\n\n\n.priodisplay:hover{\ncursor: default;\n}\n\n\n.noprio{\n   color: #98c1d9;\n}\n\n.lowprio{\n   color: #32db81;\n}\n.normalprio{\n   color: #db8a32;\n}\n.highprio{\n   color: #db324d;\n}\n\n\n\n#newTodoBtn{\n   background-color: #98c1d9;\n   color: #e0fbfc;\n   font-size: 1.2rem;\n   transition: 50ms;\n   border: 1px solid #e0fbfc;\n   border-radius: 0;\n   box-shadow: 5px 5px 20px rgba(224, 251, 252, 0.5); \n   padding: 8px 16px;\n   transition: 100ms;\n   margin-right: 16px;\n}\n\n#newTodoBtn:hover{\n   cursor: pointer;\n   background-color: #3d5a80;\n}\n\n#newTodoBtnContainer{\n   margin-top: 16px;\n   display: flex;\n   justify-content: right;\n}\n\n#newBtn{\n   color: #e0fbfc;\n   font-size: 4rem;\n   transition: 50ms;\n   border: 3px solid #e0fbfc;\n   border-radius: 50%;\n   box-shadow: 5px 5px 20px rgba(224, 251, 252, 0.5)  ; \n   transition: 100ms;\n}\n\n\n#newBtn:hover{\n   cursor: pointer;\n   background-color: #98c1d9;\n}\n\n\n\n#newBtn:active,\n#newTodoBtn:active{\n   transform: translateY(2px);\n}\n\n\ntextarea {\n   resize: none;\n }\n\n\n.material-icons-outlined {\n   font-family: 'Material Icons';\n   font-weight: normal;\n   font-style: normal;\n   font-size: 24px;  /* Preferred icon size */\n   display: inline-block;\n   line-height: 1;\n   text-transform: none;\n   letter-spacing: normal;\n   word-wrap: normal;\n   white-space: nowrap;\n   direction: ltr;\n \n   /* Support for all WebKit browsers. */\n   -webkit-font-smoothing: antialiased;\n   /* Support for Safari and Chrome. */\n   text-rendering: optimizeLegibility;\n \n   /* Support for Firefox. */\n   -moz-osx-font-smoothing: grayscale;\n \n   /* Support for IE. */\n   font-feature-settings: 'liga';\n }"], sourceRoot: "" }]); const u = l }, 645: n => { n.exports = function (n) { var e = []; return e.toString = function () { return this.map((function (e) { var t = "", o = void 0 !== e[5]; return e[4] && (t += "@supports (".concat(e[4], ") {")), e[2] && (t += "@media ".concat(e[2], " {")), o && (t += "@layer".concat(e[5].length > 0 ? " ".concat(e[5]) : "", " {")), t += n(e), o && (t += "}"), e[2] && (t += "}"), e[4] && (t += "}"), t })).join("") }, e.i = function (n, t, o, r, i) { "string" == typeof n && (n = [[null, n, void 0]]); var a = {}; if (o) for (var A = 0; A < this.length; A++) { var c = this[A][0]; null != c && (a[c] = !0) } for (var s = 0; s < n.length; s++) { var d = [].concat(n[s]); o && a[d[0]] || (void 0 !== i && (void 0 === d[5] || (d[1] = "@layer".concat(d[5].length > 0 ? " ".concat(d[5]) : "", " {").concat(d[1], "}")), d[5] = i), t && (d[2] ? (d[1] = "@media ".concat(d[2], " {").concat(d[1], "}"), d[2] = t) : d[2] = t), r && (d[4] ? (d[1] = "@supports (".concat(d[4], ") {").concat(d[1], "}"), d[4] = r) : d[4] = "".concat(r)), e.push(d)) } }, e } }, 667: n => { n.exports = function (n, e) { return e || (e = {}), n ? (n = String(n.__esModule ? n.default : n), /^['"].*['"]$/.test(n) && (n = n.slice(1, -1)), e.hash && (n += e.hash), /["'() \t\n]|(%20)/.test(n) || e.needQuotes ? '"'.concat(n.replace(/"/g, '\\"').replace(/\n/g, "\\n"), '"') : n) : n } }, 537: n => { n.exports = function (n) { var e = n[1], t = n[3]; if (!t) return e; if ("function" == typeof btoa) { var o = btoa(unescape(encodeURIComponent(JSON.stringify(t)))), r = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o), i = "/*# ".concat(r, " */"), a = t.sources.map((function (n) { return "/*# sourceURL=".concat(t.sourceRoot || "").concat(n, " */") })); return [e].concat(a).concat([i]).join("\n") } return [e].join("\n") } }, 379: n => { var e = []; function t(n) { for (var t = -1, o = 0; o < e.length; o++)if (e[o].identifier === n) { t = o; break } return t } function o(n, o) { for (var i = {}, a = [], A = 0; A < n.length; A++) { var c = n[A], s = o.base ? c[0] + o.base : c[0], d = i[s] || 0, l = "".concat(s, " ").concat(d); i[s] = d + 1; var p = t(l), m = { css: c[1], media: c[2], sourceMap: c[3], supports: c[4], layer: c[5] }; if (-1 !== p) e[p].references++, e[p].updater(m); else { var u = r(m, o); o.byIndex = A, e.splice(A, 0, { identifier: l, updater: u, references: 1 }) } a.push(l) } return a } function r(n, e) { var t = e.domAPI(e); return t.update(n), function (e) { if (e) { if (e.css === n.css && e.media === n.media && e.sourceMap === n.sourceMap && e.supports === n.supports && e.layer === n.layer) return; t.update(n = e) } else t.remove() } } n.exports = function (n, r) { var i = o(n = n || [], r = r || {}); return function (n) { n = n || []; for (var a = 0; a < i.length; a++) { var A = t(i[a]); e[A].references-- } for (var c = o(n, r), s = 0; s < i.length; s++) { var d = t(i[s]); 0 === e[d].references && (e[d].updater(), e.splice(d, 1)) } i = c } } }, 569: n => { var e = {}; n.exports = function (n, t) { var o = function (n) { if (void 0 === e[n]) { var t = document.querySelector(n); if (window.HTMLIFrameElement && t instanceof window.HTMLIFrameElement) try { t = t.contentDocument.head } catch (n) { t = null } e[n] = t } return e[n] }(n); if (!o) throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid."); o.appendChild(t) } }, 216: n => { n.exports = function (n) { var e = document.createElement("style"); return n.setAttributes(e, n.attributes), n.insert(e, n.options), e } }, 565: (n, e, t) => { n.exports = function (n) { var e = t.nc; e && n.setAttribute("nonce", e) } }, 795: n => { n.exports = function (n) { var e = n.insertStyleElement(n); return { update: function (t) { !function (n, e, t) { var o = ""; t.supports && (o += "@supports (".concat(t.supports, ") {")), t.media && (o += "@media ".concat(t.media, " {")); var r = void 0 !== t.layer; r && (o += "@layer".concat(t.layer.length > 0 ? " ".concat(t.layer) : "", " {")), o += t.css, r && (o += "}"), t.media && (o += "}"), t.supports && (o += "}"); var i = t.sourceMap; i && "undefined" != typeof btoa && (o += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i)))), " */")), e.styleTagTransform(o, n, e.options) }(e, n, t) }, remove: function () { !function (n) { if (null === n.parentNode) return !1; n.parentNode.removeChild(n) }(e) } } } }, 589: n => { n.exports = function (n, e) { if (e.styleSheet) e.styleSheet.cssText = n; else { for (; e.firstChild;)e.removeChild(e.firstChild); e.appendChild(document.createTextNode(n)) } } }, 818: (n, e, t) => { n.exports = t.p + "f19c679e91ad7ca6f4d6.ttf" }, 253: (n, e, t) => { n.exports = t.p + "b0517ac62c86b330ceca.otf" } }, e = {}; function t(o) { var r = e[o]; if (void 0 !== r) return r.exports; var i = e[o] = { id: o, exports: {} }; return n[o](i, i.exports, t), i.exports } t.m = n, t.n = n => { var e = n && n.__esModule ? () => n.default : () => n; return t.d(e, { a: e }), e }, t.d = (n, e) => { for (var o in e) t.o(e, o) && !t.o(n, o) && Object.defineProperty(n, o, { enumerable: !0, get: e[o] }) }, t.g = function () { if ("object" == typeof globalThis) return globalThis; try { return this || new Function("return this")() } catch (n) { if ("object" == typeof window) return window } }(), t.o = (n, e) => Object.prototype.hasOwnProperty.call(n, e), (() => { var n; t.g.importScripts && (n = t.g.location + ""); var e = t.g.document; if (!n && e && (e.currentScript && (n = e.currentScript.src), !n)) { var o = e.getElementsByTagName("script"); o.length && (n = o[o.length - 1].src) } if (!n) throw new Error("Automatic publicPath is not supported in this browser"); n = n.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/"), t.p = n })(), t.b = document.baseURI || self.location.href, (() => { var n = t(379), e = t.n(n), o = t(795), r = t.n(o), i = t(569), a = t.n(i), A = t(565), c = t.n(A), s = t(216), d = t.n(s), l = t(589), p = t.n(l), m = t(24), u = {}; u.styleTagTransform = p(), u.setAttributes = c(), u.insert = a().bind(null, "head"), u.domAPI = r(), u.insertStyleElement = d(), e()(m.Z, u), m.Z && m.Z.locals && m.Z.locals; var C = t(426), h = {}; function f() { const n = document.querySelector("body"), e = document.querySelector("main"); e && n.removeChild(e) } function b(n) { const e = document.querySelector("body"), t = document.createElement("main"); if (e.appendChild(t), n) { n.todos.forEach((e => { const o = document.createElement("div"); o.classList.add("todo-container"); const r = document.createElement("p"); r.innerText = e.title; const i = document.createElement("button"); i.innerText = "DETAILS", i.addEventListener("click", (function (n) { !function (n) { const e = document.querySelector("body"), t = document.createElement("div"); t.classList.add("overlay-div"); const o = document.createElement("div"); o.classList.add("details-container"); const r = document.createElement("h4"); r.innerText = n.title; const i = document.createElement("button"); i.innerText = "close", i.setAttribute("class", "close-btn"), i.addEventListener("click", (function (n) { e.removeChild(t) })); const a = document.createElement("p"); a.innerText = `Project: ${n.parentProject} \n Priority: ${n.priority} \n Details: ${n.description} \n Due Date: ${n.dueDate} \n Completed : ${n.complete ? "yes" : "no"}`, o.appendChild(r), o.appendChild(a), o.appendChild(i), e.appendChild(t), t.appendChild(o) }(e) })); const a = document.createElement("span"); a.innerText = "delete_forever", a.classList.add("material-icons-outlined", "deleteBtn"), a.addEventListener("click", (function (n) { e.deleteTodo(), t.removeChild(o) })); const A = document.createElement("span"); A.innerText = "edit", A.classList.add("material-icons-outlined", "editBtn"), A.addEventListener("click", (function (t) { !function (n, e) { const t = document.querySelector("body"), o = document.createElement("div"); o.classList.add("overlay-div"); const r = document.createElement("div"); r.classList.add("newtodo-container"); const i = document.createElement("h4"); i.innerText = `Edit '${n.title}'`; const a = document.createElement("button"); a.innerText = "Cancel", a.setAttribute("class", "close-btn"), a.addEventListener("click", (function (n) { t.removeChild(o) })); const A = document.createElement("form"), c = document.createElement("input"); c.setAttribute("type", "text"), c.setAttribute("required", "true"), c.value = n.title; const s = document.createElement("input"); s.setAttribute("type", "date"); const d = document.createElement("textarea"); d.setAttribute("placeholder", "Details about your task"), d.setAttribute("id", "todo-textarea"), d.setAttribute("maxlength", "500"), d.value = n.description; const l = document.createElement("select"); l.setAttribute("name", "priority"), l.setAttribute("id", "priority"); const p = document.createElement("option"); p.setAttribute("value", ""), p.innerText = "-- priority --"; const m = document.createElement("option"); m.setAttribute("value", "Low"), m.innerText = "Low"; const u = document.createElement("option"); u.setAttribute("value", "Normal"), u.innerText = "Normal"; const C = document.createElement("option"); C.setAttribute("value", "High"), C.innerText = "High", function (n, e, t, o, r) { let i = [e.innerText, t.innerText, o.innerText, r.innerText], a = [e, t, o, r]; for (let e = 0; e < i.length; e++)n.priority == i[e] && a[e].setAttribute("selected", "true") }(n, p, m, u, C), l.appendChild(p), l.appendChild(m), l.appendChild(u), l.appendChild(C); const h = document.createElement("button"); h.innerText = "Confirm", h.setAttribute("type", "submit"), A.addEventListener("submit", (function (r) { r.preventDefault(), n.title = c.value, n.description = d.value, s.value && (n.dueDate = s.value), n.priority = l.value, f(), b(e), t.removeChild(o) })), r.appendChild(i), A.appendChild(c), A.appendChild(s), A.appendChild(d), A.appendChild(l), A.appendChild(a), A.appendChild(h), r.appendChild(A), t.appendChild(o), o.appendChild(r) }(e, n) })); const c = document.createElement("div"); c.innerText = e.dueDate; const s = document.createElement("span"); s.classList.add("material-icons-outlined", "toggleBtn"), e.complete ? (s.innerText = "radio_button_checked", o.classList.add("todo-completed")) : (s.innerText = "radio_button_unchecked", o.classList.remove("todo-completed")), s.addEventListener("click", (function (n) { var t, r, i; t = n, i = o, (r = e).complete ? (r.complete = !1, t.originalTarget.innerText = "radio_button_unchecked", i.classList.remove("todo-completed")) : (r.complete = !0, t.originalTarget.innerText = "radio_button_checked", i.classList.add("todo-completed")) })); const d = document.createElement("span"); d.classList.add("material-icons-outlined", "priodisplay"), d.innerText = "warning", function (n, e) { switch (e.priority) { case "Low": n.classList.add("lowprio"); break; case "Normal": n.classList.add("normalprio"); break; case "High": n.classList.add("highprio"); break; case "": n.classList.add("noprio") } }(d, e); const l = document.createElement("div"); l.setAttribute("class", "btn-container"), l.appendChild(s), l.appendChild(A), l.appendChild(a), l.appendChild(d), o.appendChild(r), o.appendChild(i), o.appendChild(c), o.appendChild(l), t.appendChild(o) })); const e = document.createElement("div"); e.setAttribute("id", "newTodoBtnContainer"); const o = document.createElement("span"); e.appendChild(o), o.setAttribute("id", "newTodoBtn"), o.innerText = "New task", t.appendChild(e), o.addEventListener("click", (function (e) { !function (n) { const e = document.querySelector("body"), t = document.createElement("div"); t.classList.add("overlay-div"); const o = document.createElement("div"); o.classList.add("newtodo-container"); const r = document.createElement("h4"); r.innerText = "Create a new Todo"; const i = document.createElement("button"); i.innerText = "Cancel", i.setAttribute("class", "close-btn"), i.addEventListener("click", (function (n) { e.removeChild(t) })); const a = document.createElement("form"), A = document.createElement("input"); A.setAttribute("type", "text"), A.setAttribute("required", "true"), A.setAttribute("placeholder", "Choose a title"); const c = document.createElement("input"); c.setAttribute("type", "date"); const s = document.createElement("textarea"); s.setAttribute("placeholder", "Details about your task"), s.setAttribute("id", "todo-textarea"), s.setAttribute("maxlength", "500"); const d = document.createElement("select"); d.setAttribute("name", "priority"), d.setAttribute("id", "priority"); const l = document.createElement("option"); l.setAttribute("value", ""), l.innerText = "-- priority --"; const p = document.createElement("option"); p.setAttribute("value", "Low"), p.innerText = "Low"; const m = document.createElement("option"); m.setAttribute("value", "Normal"), m.innerText = "Normal"; const u = document.createElement("option"); u.setAttribute("value", "High"), u.innerText = "High", d.appendChild(l), d.appendChild(p), d.appendChild(m), d.appendChild(u); const C = document.createElement("button"); C.innerText = "Confirm", C.setAttribute("type", "submit"), a.addEventListener("submit", (function (o) { o.preventDefault(), console.log(d.value), n.createNewTodo(A.value, c.value, s.value, d.value), f(), b(n), e.removeChild(t) })), o.appendChild(r), a.appendChild(A), a.appendChild(c), a.appendChild(s), a.appendChild(d), a.appendChild(i), a.appendChild(C), o.appendChild(a), e.appendChild(t), t.appendChild(o) }(n) })) } } function E(n) { this.title = n, this.projects = [] } function g(n = "New Project", e = !1) { this.todos = [], this.isDefault = e, this.title = n, this.containerArray, this.description } function B(n = "Unnamed to-do", e = "", t = "", o = "") { this.title = n, this.description = t, this.dueDate = e, this.priority = o, this.complete = !1, this.containerArray, this.parentProject } h.styleTagTransform = p(), h.setAttributes = c(), h.insert = a().bind(null, "head"), h.domAPI = r(), h.insertStyleElement = d(), e()(C.Z, h), C.Z && C.Z.locals && C.Z.locals, E.prototype.createNewProject = function (n, e) { const t = new g(n, e); return this.projects.push(t), t.containerArray = this.projects, t }, g.prototype.createNewTodo = function (n, e, t, o) { const r = new B(n, e, t, o); return r.containerArray = this.todos, r.parentProject = this.title, this.todos.push(r), r }, g.prototype.deleteProject = function () { for (let n = 0; n < this.containerArray.length; n++)if (this == this.containerArray[n]) { this.containerArray.splice(n, 1); break } 1 == this.containerArray.length && (this.containerArray[0].isDefault = !0) }, B.prototype.deleteTodo = function () { for (let n = 0; n < this.containerArray.length; n++)if (this == this.containerArray[n]) return this.containerArray.splice(n, 1) }, B.prototype.moveTodo = function (n) { let e = this.deleteTodo(); return e[0].containerArray = n.todos, e[0].parentProject = n.title, n.todos.push(e[0]), e }; const G = function () { const n = new E("My Todo List"), e = n.createNewProject("Example Project 1", !0); return e.createNewTodo("Feed the cats", "december"), e.createNewTodo("Feed the birds", "october"), n.createNewProject("Example Project 2", !1).createNewTodo("Feed the dogs", "september"), n.createNewProject("Example Project 3", !1), n }(); function y(n) { const e = document.querySelectorAll(".sidebar-item"); n.stopPropagation(), e.forEach((n => { n.classList.remove("activated") })), n.currentTarget.classList.add("activated") } !function () { const n = document.querySelector("body"), e = document.createElement("header"), t = document.createElement("h1"); t.innerText = "My Todo List", e.appendChild(t), n.appendChild(e) }(), function () { const n = document.querySelector("body"), e = document.createElement("aside"); n.appendChild(e) }(), function n(e) { const t = document.querySelector("aside"); t.innerHTML = ""; const o = document.createElement("div"), r = document.createElement("div"), i = document.createElement("h2"); i.innerText = "Projects", o.appendChild(i); for (let t = 0; t < e.projects.length; t++) { let r = document.createElement("div"); r.classList.add("sidebar-item"); const i = document.createElement("span"); i.innerText = "delete_forever", i.classList.add("material-icons-outlined", "deleteBtn"), i.addEventListener("click", (function (o) { e.projects[t].deleteProject(), n(e) })); const a = document.createElement("span"); a.classList.add("sidebar-item-text"), a.innerText = e.projects[t].title, r.appendChild(a), r.appendChild(i), o.appendChild(r), r.addEventListener("click", (function (n) { f(), b(e.projects[t]), y(n) })) } const a = document.createElement("span"); a.classList.add("material-icons-outlined"), a.setAttribute("id", "newBtn"), a.innerText = "add", a.addEventListener("click", (function (e) { !function () { const e = document.querySelector("body"), t = document.createElement("div"); t.classList.add("overlay-div"); const o = document.createElement("div"); o.classList.add("newitem-container"); const r = document.createElement("h4"); r.innerText = "Create a new project"; const i = document.createElement("button"); i.innerText = "Cancel", i.setAttribute("class", "close-btn"), i.addEventListener("click", (function (n) { e.removeChild(t) })); const a = document.createElement("form"), A = document.createElement("input"); A.setAttribute("type", "text"), A.setAttribute("required", "true"), A.setAttribute("placeholder", "Choose a title"); const c = document.createElement("button"); c.innerText = "Confirm", c.setAttribute("type", "submit"), a.addEventListener("submit", (function (o) { o.preventDefault(), G.createNewProject(A.value), n(G), console.log(G), e.removeChild(t) })), o.appendChild(r), a.appendChild(A), a.appendChild(i), a.appendChild(c), o.appendChild(a), e.appendChild(t), t.appendChild(o) }() })), t.appendChild(o), r.appendChild(a), t.appendChild(r) }(G), b(G.projects[0]); const x = document.querySelector(".sidebar-item"); x && x.classList.add("activated") })() })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
